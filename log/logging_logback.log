[INFO      ] 2023-07-06 19:25:08 Starting StreamApplication using Java 17.0.6 with PID 736 (E:\workspace\Lilopop\stream\target\classes started by Administrator in E:\workspace\Lilopop)
[INFO      ] 2023-07-06 19:25:08 No active profile set, falling back to 1 default profile: "default"
[INFO      ] 2023-07-06 19:25:08 HV000001: Hibernate Validator 8.0.0.Final
[INFO      ] 2023-07-06 19:25:08 No bean named 'errorChannel' has been explicitly defined. Therefore, a default PublishSubscribeChannel will be created.
[INFO      ] 2023-07-06 19:25:08 No bean named 'integrationHeaderChannelRegistry' has been explicitly defined. Therefore, a default DefaultHeaderChannelRegistry will be created.
[INFO      ] 2023-07-06 19:25:08 Bean 'org.springframework.boot.autoconfigure.integration.IntegrationAutoConfiguration$IntegrationJmxConfiguration' of type [org.springframework.boot.autoconfigure.integration.IntegrationAutoConfiguration$IntegrationJmxConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[INFO      ] 2023-07-06 19:25:08 Bean 'org.springframework.cloud.stream.binder.rabbit.config.ExtendedBindingHandlerMappingsProviderConfiguration' of type [org.springframework.cloud.stream.binder.rabbit.config.ExtendedBindingHandlerMappingsProviderConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[INFO      ] 2023-07-06 19:25:08 Bean 'rabbitExtendedPropertiesDefaultMappingsProvider' of type [org.springframework.cloud.stream.binder.rabbit.config.ExtendedBindingHandlerMappingsProviderConfiguration$$Lambda$571/0x0000000800f93018] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[INFO      ] 2023-07-06 19:25:08 Bean 'BindingHandlerAdvise' of type [org.springframework.cloud.stream.config.BindingHandlerAdvise] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[INFO      ] 2023-07-06 19:25:08 Bean 'spelConverter' of type [org.springframework.cloud.stream.config.SpelExpressionConverterConfiguration$SpelConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[INFO      ] 2023-07-06 19:25:08 Bean 'spring.jmx-org.springframework.boot.autoconfigure.jmx.JmxProperties' of type [org.springframework.boot.autoconfigure.jmx.JmxProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[INFO      ] 2023-07-06 19:25:08 Bean 'org.springframework.boot.autoconfigure.jmx.JmxAutoConfiguration' of type [org.springframework.boot.autoconfigure.jmx.JmxAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[INFO      ] 2023-07-06 19:25:08 Bean 'mbeanServer' of type [com.sun.jmx.mbeanserver.JmxMBeanServer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[INFO      ] 2023-07-06 19:25:09 Channel 'stream.logConsumer-in-0' has 1 subscriber(s).
[WARN      ] 2023-07-06 19:25:09 Using deprecated '-debug' fallback for parameter name resolution. Compile the affected code with '-parameters' instead or avoid its introspection: org.springframework.amqp.rabbit.core.RabbitAdmin
[INFO      ] 2023-07-06 19:25:09 Registering MessageChannel errorChannel
[INFO      ] 2023-07-06 19:25:09 Registering MessageChannel logConsumer-in-0
[INFO      ] 2023-07-06 19:25:09 Registering MessageChannel nullChannel
[INFO      ] 2023-07-06 19:25:09 Registering MessageHandler _org.springframework.integration.errorLogger
[INFO      ] 2023-07-06 19:25:09 Adding {logging-channel-adapter:_org.springframework.integration.errorLogger} as a subscriber to the 'errorChannel' channel
[INFO      ] 2023-07-06 19:25:09 Channel 'stream.errorChannel' has 1 subscriber(s).
[INFO      ] 2023-07-06 19:25:09 started bean '_org.springframework.integration.errorLogger'
[INFO      ] 2023-07-06 19:25:09 Netty started on port 9800
[INFO      ] 2023-07-06 19:25:09 Creating binder: rabbit
[INFO      ] 2023-07-06 19:25:09 Constructing binder child context for rabbit
[INFO      ] 2023-07-06 19:25:09 Caching the binder: rabbit
[INFO      ] 2023-07-06 19:25:09 declaring queue for inbound: log.logconsumer, bound to: log
[INFO      ] 2023-07-06 19:25:09 Attempting to connect to: [127.0.0.1:5672]
[INFO      ] 2023-07-06 19:25:09 Created new connection: rabbitConnectionFactory#4130a648:0/SimpleConnection@5844a2d1 [delegate=amqp://guest@127.0.0.1:5672/, localPort=59586]
[INFO      ] 2023-07-06 19:25:09 Channel 'rabbit-477942836.logConsumer-in-0.errors' has 1 subscriber(s).
[INFO      ] 2023-07-06 19:25:09 Channel 'rabbit-477942836.logConsumer-in-0.errors' has 2 subscriber(s).
[INFO      ] 2023-07-06 19:25:09 started bean 'inbound.log.logconsumer'
[INFO      ] 2023-07-06 19:25:09 Started StreamApplication in 1.424 seconds (process running for 1.867)
[INFO      ] 2023-07-06 19:25:10 auth服务class com.auth.service.RoleService.saveUserToRole参数:userId:109 role:Role{id=1, roleName='管理员', cteateTime=2023-06-30 02:27:55.0, deleated=0} ，执行结果为:调用
[ERROR     ] 2023-07-06 19:25:10 auth服务class com.auth.service.RoleService.saveUserToRole参数:userId:109 role:Role{id=1, roleName='管理员', cteateTime=2023-06-30 02:27:55.0, deleated=0} ,异常为：org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.auth.pojo.base.Role.users: could not initialize proxy - no Session，执行结果为:失败
[INFO      ] 2023-07-06 19:25:10 auth服务class com.auth.service.RoleService.saveUserToRole参数:userId:109 role:Role{id=1, roleName='管理员', cteateTime=2023-06-30 02:27:55.0, deleated=0} ，执行结果为:调用
[ERROR     ] 2023-07-06 19:25:10 auth服务class com.auth.service.RoleService.saveUserToRole参数:userId:109 role:Role{id=1, roleName='管理员', cteateTime=2023-06-30 02:27:55.0, deleated=0} ,异常为：org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.auth.pojo.base.Role.users: could not initialize proxy - no Session，执行结果为:失败
[INFO      ] 2023-07-06 19:25:10 auth服务class com.auth.service.RoleService.saveUserToRole参数:userId:109 role:Role{id=1, roleName='管理员', cteateTime=2023-06-30 02:27:55.0, deleated=0} ，执行结果为:调用
[ERROR     ] 2023-07-06 19:25:10 auth服务class com.auth.service.RoleService.saveUserToRole参数:userId:109 role:Role{id=1, roleName='管理员', cteateTime=2023-06-30 02:27:55.0, deleated=0} ,异常为：org.springframework.orm.jpa.JpaObjectRetrievalFailureException: Unable to find com.auth.pojo.base.UserToRole with id UserRoleId{userId=null, roleId=null}，执行结果为:失败
[INFO      ] 2023-07-06 19:25:10 auth服务class com.auth.service.RoleService.saveUserToRole参数:userId:109 role:Role{id=1, roleName='管理员', cteateTime=2023-06-30 02:27:55.0, deleated=0} ，执行结果为:调用
[ERROR     ] 2023-07-06 19:25:10 auth服务class com.auth.service.RoleService.saveUserToRole参数:userId:109 role:Role{id=1, roleName='管理员', cteateTime=2023-06-30 02:27:55.0, deleated=0} ,异常为：org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.auth.pojo.base.Role.users: could not initialize proxy - no Session，执行结果为:失败
[INFO      ] 2023-07-06 19:25:10 auth服务class com.auth.service.RoleService.saveUserToRole参数:userId:109 role:Role{id=1, roleName='管理员', cteateTime=2023-06-30 02:27:55.0, deleated=0} ，执行结果为:调用
[ERROR     ] 2023-07-06 19:25:10 auth服务class com.auth.service.RoleService.saveUserToRole参数:userId:109 role:Role{id=1, roleName='管理员', cteateTime=2023-06-30 02:27:55.0, deleated=0} ,异常为：org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.auth.pojo.base.Role.users: could not initialize proxy - no Session，执行结果为:失败
[INFO      ] 2023-07-06 19:25:10 auth服务class com.auth.service.RoleService.saveUserToRole参数:userId:109 role:Role{id=1, roleName='管理员', cteateTime=2023-06-30 02:27:55.0, deleated=0} ，执行结果为:调用
[ERROR     ] 2023-07-06 19:25:10 auth服务class com.auth.service.RoleService.saveUserToRole参数:userId:109 role:Role{id=1, roleName='管理员', cteateTime=2023-06-30 02:27:55.0, deleated=0} ,异常为：org.springframework.orm.jpa.JpaObjectRetrievalFailureException: Unable to find com.auth.pojo.base.UserToRole with id UserRoleId{userId=null, roleId=null}，执行结果为:失败
[INFO      ] 2023-07-06 19:25:10 auth服务class com.auth.service.RoleService.saveUserToRole参数:userId:109 roleId:1 ，执行结果为:调用
[INFO      ] 2023-07-06 19:25:10 auth服务class com.auth.service.RoleService.saveUserToRole参数:无返回值，执行结果为:成功
[INFO      ] 2023-07-06 19:25:10 auth服务class com.auth.service.RoleService.saveUserToRole参数:userId:109 roleId:1 ，执行结果为:调用
[INFO      ] 2023-07-06 19:25:10 auth服务class com.auth.service.RoleService.saveUserToRole参数:无返回值，执行结果为:成功
[INFO      ] 2023-07-06 19:25:10 auth服务class com.auth.service.RoleService.saveUserToRole参数:userId:109 roleId:1 ，执行结果为:调用
[ERROR     ] 2023-07-06 19:25:10 auth服务class com.auth.service.RoleService.saveUserToRole参数:userId:109 roleId:1 ,异常为：org.springframework.orm.jpa.JpaSystemException: attempted to assign id from null one-to-one property [com.auth.pojo.base.UserToRole.role]，执行结果为:失败
[INFO      ] 2023-07-06 19:25:10 auth服务class com.auth.service.RoleService.saveUserToRole参数:userId:109 roleId:1 ，执行结果为:调用
[INFO      ] 2023-07-06 19:25:10 auth服务class com.auth.service.RoleService.saveUserToRole参数:无返回值，执行结果为:成功
[INFO      ] 2023-07-06 19:25:10 auth服务class com.auth.service.RoleService.saveUserToRole参数:userId:54 roleIds:[1, 2] ，执行结果为:调用
[ERROR     ] 2023-07-06 19:25:10 auth服务class com.auth.service.RoleService.saveUserToRole参数:userId:54 roleIds:[1, 2] ,异常为：org.springframework.dao.InvalidDataAccessResourceUsageException: JDBC exception executing SQL [select * from ROLE where id in (?,?) and deleted = ?]; SQL [n/a]，执行结果为:失败
[INFO      ] 2023-07-06 19:25:10 auth服务class com.auth.service.RoleService.saveUserToRole参数:userId:54 roleIds:[1, 2] ，执行结果为:调用
[INFO      ] 2023-07-06 19:25:10 auth服务class com.auth.service.RoleService.saveUserToRole参数:无返回值，执行结果为:成功
[INFO      ] 2023-07-06 19:25:10 auth服务class com.auth.service.RoleService.saveUserToRole参数:userId:54 roleIds:[1, 2] ，执行结果为:调用
[INFO      ] 2023-07-06 19:25:10 auth服务class com.auth.service.RoleService.saveUserToRole参数:无返回值，执行结果为:成功
[INFO      ] 2023-07-06 19:25:10 auth服务class com.auth.service.RoleService.saveUserToRole参数:userId:53 roleIds:[1, 2] ，执行结果为:调用
[INFO      ] 2023-07-06 19:25:10 auth服务class com.auth.service.RoleService.saveUserToRole参数:无返回值，执行结果为:成功
[INFO      ] 2023-07-06 19:25:10 auth服务class com.auth.service.RoleService.delUserToRole参数:userId:53 roleIds:[1, 2] ，执行结果为:调用
[INFO      ] 2023-07-06 19:25:10 auth服务class com.auth.service.RoleService.delUserToRole参数:无返回值，执行结果为:成功
[INFO      ] 2023-07-06 19:25:10 auth服务class com.auth.service.RoleService.saveUserToRole参数:userId:53 roleIds:[1, 2] ，执行结果为:调用
[INFO      ] 2023-07-06 19:25:10 auth服务class com.auth.service.RoleService.saveUserToRole参数:无返回值，执行结果为:成功
[INFO      ] 2023-07-06 19:25:10 auth服务class com.auth.service.UserService.getUsersByRole参数:roleIds:[1, 2] ，执行结果为:调用
[INFO      ] 2023-07-06 19:25:10 auth服务class com.auth.service.UserService.getUsersByRole参数:无返回值，执行结果为:成功
[INFO      ] 2023-07-06 19:25:10 auth服务class com.auth.service.UserService.getUsersByRole参数:roleIds:[1, 2] ，执行结果为:调用
[INFO      ] 2023-07-06 19:25:10 auth服务class com.auth.service.UserService.getUsersByRole参数:无返回值，执行结果为:成功
[INFO      ] 2023-07-06 19:25:10 auth服务class com.auth.service.DeptService.saveDeptPrincipal参数:userId:53 deptId:5 ，执行结果为:调用
[INFO      ] 2023-07-06 19:25:10 auth服务class com.auth.service.DeptService.saveDeptPrincipal参数:无返回值，执行结果为:成功
[INFO      ] 2023-07-06 19:25:10 auth服务class com.auth.service.DeptService.saveUserToDept参数:userIds:[53, 109, 54] deptId:5 ，执行结果为:调用
[INFO      ] 2023-07-06 19:25:10 auth服务class com.auth.service.DeptService.saveUserToDept参数:无返回值，执行结果为:成功
[INFO      ] 2023-07-06 19:25:10 auth服务class com.auth.service.DeptService.delUserToDept参数:userIds:[53, 109, 54] deptId:5 ，执行结果为:调用
[INFO      ] 2023-07-06 19:25:10 auth服务class com.auth.service.DeptService.delUserToDept参数:无返回值，执行结果为:成功
[INFO      ] 2023-07-06 19:25:10 auth服务class com.auth.service.DeptService.listPage参数:pageNum:1 pageSize:5 ，执行结果为:调用
[INFO      ] 2023-07-06 19:25:10 auth服务class com.auth.service.DeptService.listPage参数:无返回值，执行结果为:成功
[INFO      ] 2023-07-06 19:25:10 auth服务class com.auth.service.StationService.listStation参数:del:0 ，执行结果为:调用
[INFO      ] 2023-07-06 19:25:10 auth服务class com.auth.service.StationService.listStation参数:[Station{id=1, name='员工'}, Station{id=2, name='组长'}, Station{id=3, name='经理'}, Station{id=4, name='科长'}]，执行结果为:成功
[INFO      ] 2023-07-06 19:25:10 auth服务class com.auth.service.StationService.listStation参数:del:0 ，执行结果为:调用
[INFO      ] 2023-07-06 19:25:10 auth服务class com.auth.service.StationService.listStation参数:[Station{id=1, name='员工'}, Station{id=2, name='组长'}, Station{id=3, name='经理'}, Station{id=4, name='科长'}]，执行结果为:成功
[INFO      ] 2023-07-06 19:25:10 auth服务class com.auth.service.StationService.setUsers参数:usersId:[31, 32] stationId:1 ，执行结果为:调用
[INFO      ] 2023-07-06 19:25:10 auth服务class com.auth.service.StationService.setUsers参数:无返回值，执行结果为:成功
[INFO      ] 2023-07-06 19:25:10 auth服务class com.auth.service.StationService.listStation参数:del:0 ，执行结果为:调用
[INFO      ] 2023-07-06 19:25:10 auth服务class com.auth.service.StationService.listStation参数:[Station{id=1, name='员工'}, Station{id=2, name='组长'}, Station{id=3, name='经理'}, Station{id=4, name='科长'}]，执行结果为:成功
[INFO      ] 2023-07-06 19:25:10 auth服务class com.auth.service.StationService.delUsers参数:usersId:[31, 32] stationId:1 ，执行结果为:调用
[INFO      ] 2023-07-06 19:25:10 auth服务class com.auth.service.StationService.delUsers参数:usersId:[31, 32] stationId:1 ，执行结果为:调用
[INFO      ] 2023-07-06 19:25:10 auth服务class com.auth.service.StationService.delUsers参数:无返回值，执行结果为:成功
[INFO      ] 2023-07-06 19:25:10 auth服务class com.auth.service.StationService.findUsersByStationId参数:stationId:1 pageNum:1 pageSize:1 ，执行结果为:调用
[INFO      ] 2023-07-06 19:25:10 auth服务class com.auth.service.StationService.findUsersByStationId参数:Page 2 of 0 containing UNKNOWN instances，执行结果为:成功
[INFO      ] 2023-07-06 19:25:10 auth服务class com.auth.service.StationService.setUsers参数:usersId:[31, 32] stationId:1 ，执行结果为:调用
[INFO      ] 2023-07-06 19:25:10 auth服务class com.auth.service.StationService.setUsers参数:无返回值，执行结果为:成功
[INFO      ] 2023-07-06 19:25:10 auth服务class com.auth.service.StationService.findUsersByStationId参数:stationId:1 pageNum:1 pageSize:1 ，执行结果为:调用
[INFO      ] 2023-07-06 19:25:10 auth服务class com.auth.service.StationService.findUsersByStationId参数:Page 2 of 2 containing com.auth.pojo.base.UserToStation instances，执行结果为:成功
[INFO      ] 2023-07-06 19:26:41 Waiting for workers to finish.
[INFO      ] 2023-07-06 19:26:41 Successfully waited for workers to finish.
[INFO      ] 2023-07-06 19:26:41 stopped bean 'inbound.log.logconsumer'
[INFO      ] 2023-07-06 19:26:41 Registering MessageChannel rabbit-477942836.logConsumer-in-0.errors
[INFO      ] 2023-07-06 19:26:41 Channel 'stream.rabbit-477942836.logConsumer-in-0.errors' has 1 subscriber(s).
[INFO      ] 2023-07-06 19:26:41 Removing {logging-channel-adapter:_org.springframework.integration.errorLogger} as a subscriber to the 'errorChannel' channel
[INFO      ] 2023-07-06 19:26:41 Channel 'stream.errorChannel' has 0 subscriber(s).
[INFO      ] 2023-07-06 19:26:41 stopped bean '_org.springframework.integration.errorLogger'
